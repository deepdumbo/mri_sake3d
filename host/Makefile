# Makefile generated by imake - do not edit!
# $Xorg: imake.c,v 1.6 2001/02/09 02:03:15 xorgcvs Exp $

#
#
#

# ====================================================================
#
#  Included macros and rules from <Imake.cf> and <Imake.rules>
#
# ====================================================================

PWD        = /home/ysfeng/surbeck/temp/sake/host
TOP        = /ESE_DV24.0_R01
OS_NAME    = Linux
OS_RELEASE = 2_6_18__194_17_1_el5

SHELL = /bin/sh

BASENAME = /bin/basename
CAT      = /bin/cat
CHMOD    = /bin/chmod
CP       = /bin/cp
CRYPT    = $(TOP)/3p_linux/enigma/bin/enigma
CUT      = /usr/bin/cut
DD       = /bin/dd
GREP     = /bin/grep
MV       = /bin/mv
RM       = /bin/rm -f
SORT     = /bin/sort
TAIL     = /usr/bin/tail
TAR      = /bin/tar
TOUCH    = /bin/touch

# ====================================================================

#
#
#
#
#
#

# ====================================================================
#
#  Common targets found in all makefiles
#
# ====================================================================

all:: hw sim

clean::

hw::

install::

sim::

test::

# ====================================================================

#
#
#
#
#
#

# ====================================================================
#
#  Beginning of included template file: "GCC.tmpl"
#
# ====================================================================

#
# These are parameter definitions common to all users who use the
#    GCC compiler set.
#

AR      = $(GE_CCTOP)/bin/x86_64-unknown-linux-gnu-ar
CC      = $(GE_CCTOP)/bin/x86_64-unknown-linux-gnu-gcc
CPP     = $(GE_CCTOP)/bin/x86_64-unknown-linux-gnu-cpp
CXX     = $(GE_CCTOP)/bin/x86_64-unknown-linux-gnu-g++
FC      = $(GE_CCTOP)/bin/x86_64-unknown-linux-gnu-gfortran
LD      = $(GE_CCTOP)/bin/x86_64-unknown-linux-gnu-ld
NM      = $(GE_CCTOP)/bin/x86_64-unknown-linux-gnu-nm
OBJCOPY = $(GE_CCTOP)/bin/x86_64-unknown-linux-gnu-objcopy

STD_COMPILE_FLAGS =     $(ENV_GCC_CPPFLAGS)     $(HW_OPTIONS)     -g     $(WARNING_ERROR_FLAG)     -Wall

DEFAULT_CFLAGS =     $(STD_COMPILE_FLAGS)

DEFAULT_CXXFLAGS =     $(STD_COMPILE_FLAGS)

DEFAULT_FFLAGS =     $(STD_COMPILE_FLAGS)

DEFAULT_OBJCPPFLAGS =     $(STD_COMPILE_FLAGS)     -U__GNUC__     -Dconst=     -DUSE_STDARG     -DALLC

DEFAULT_SO_CFLAGS =     -fpic

DEFAULT_SO_CXXFLAGS =     -fpic

DEFAULT_LDFLAGS1 =     $(ENV_GCC_LDFLAGS)     $(HW_OPTIONS)

DEFAULT_LDFLAGS2 =

DEFAULT_ARFLAGS = crs

DEFAULT_CXXARFLAGS = -ar -WR,-v -o

HW32_OPTIONS =     -m32

HW64_OPTIONS =     -m64

# Global compiler flag concering warnings.  By default we don't treat
# warnings as errors.  Add -Werror to cause build errors on warnings.

WARNING_ERROR_FLAG =

#
# End common GCC parameter definitions.
#

XLATE  = $(TOP)/3p/xlate/nios1/xlatenios1
PIFF2HEX  = $(TOP)/3p/xlate/piff/piff2hexout
BINSUM  = $(TOP)/3p/xlate/binsum/binsum

# --------------------------------------------------------------------
#
#  Rule: "SuffixRules()"
#

.SUFFIXES:
.SUFFIXES: .c .cc .cpp .cxx .f .m .mi .o

SUFFIX_CFLAGS = $(SO_CFLAGS) $(CFLAGS1) $(DEFAULT_CFLAGS) $(CFLAGS2)

SUFFIX_CXXFLAGS = $(SO_CXXFLAGS) $(CXXFLAGS1) $(DEFAULT_CXXFLAGS) \
	$(CXXFLAGS2)

SUFFIX_FFLAGS = $(FFLAGS1) $(DEFAULT_FFLAGS) $(FFLAGS2)

SUFFIX_OBJCPPFLAGS = $(CPPFLAGS1) $(DEFAULT_OBJCPPFLAGS) $(CPPFLAGS2)

.c.o:
	$(RM) ${@F}
	$(CC) -c -o ${@F} $< $(SUFFIX_CFLAGS) -UIMAKE_GCC_SUFFIXRULES

.cc.o:
	$(RM) ${@F}
	$(CXX) -c -o ${@F} $< $(SUFFIX_CXXFLAGS) -UIMAKE_GCC_SUFFIXRULES

.cpp.o:
	$(RM) ${@F}
	$(CXX) -c -o ${@F} $< $(SUFFIX_CXXFLAGS) -UIMAKE_GCC_SUFFIXRULES

.cxx.o:
	$(RM) ${@F}
	$(CXX) -c -o ${@F} $< $(SUFFIX_CXXFLAGS) -UIMAKE_GCC_SUFFIXRULES

.f.o:
	$(RM) ${@F}
	$(FC) -c -o ${@F} $< $(SUFFIX_FFLAGS) -UIMAKE_GCC_SUFFIXRULES

.m.mi:
	$(RM) ${@F}
	$(CPP) -o ${@F} $< $(SUFFIX_OBJCPPFLAGS) -UIMAKE_GCC_SUFFIXRULES

clean::
	-$(RM) *.mi *.o

# --------------------------------------------------------------------

# ====================================================================
#
#  End of included template file: "GCC.tmpl"
#
# ====================================================================

#
#
#
#
#
#

# ====================================================================
#
#  Local Imakefile begins here
#
# ====================================================================

TOOLSET = HOST_C

TOOLSET = EPIC

MAKE_TARGET = programs

PSD = bbepi

ADD_INLINE_FILES = touch.e

ADD_EFILES =

ADD_CFILES_HOST = getminesp.c

ADD_CFILES_TGT =

ADD_EFLAGS = -z

ADD_E_INCLUDES =

ADD_CFLAGS_HH = -Werror

ADD_CFLAGS_HS = -Werror

ADD_CFLAGS_TH = -Werror

ADD_CFLAGS_TS = -Werror

ADD_LINKFLAGS_HH =

ADD_LINKFLAGS_HS =

ADD_LINKFLAGS_TH =

ADD_LINKFLAGS_TS =

ADD_LIBS_HH =

ADD_LIBS_HS =

ADD_LIBS_TH =

ADD_LIBS_TS =

# --------------------------------------------------------------------
#
#  Rule: "UsePgenOnHost()"
#
#
#  This rule is empty for the GCC compiler set.  It is only used
#  by the Epic preprocessor.
#
# --------------------------------------------------------------------

# --------------------------------------------------------------------
#
#  Rule: "PsdParameters()"
#
#

VPATH = ..

#
#  Rule: "PsdSuffixRules()"
#

.SUFFIXES: .c .o-hh .o-hhts

CFLAGS_HH  = $(CFLAGS1_HH) $(DEFAULT_CFLAGS) $(CFLAGS2_HH)
CFLAGS_TS  = $(CFLAGS1_TS) $(DEFAULT_CFLAGS) $(CFLAGS2_TS)

.c.o-hh:
	$(RM) ${@F}
	$(CC) -c -o ${@F} $< $(CFLAGS_HH) -UIMAKE_PSDSUFFIXRULES

.c.o-hhts:
	$(RM) ${@F}
	$(CC) -c -o ${@F} $< $(CFLAGS_TS) -UIMAKE_PSDSUFFIXRULES

#
#  Rule: "PsdCleanRule()"
#

clean::
	-$(RM) *.o-hh *.o-hhts

#
#  Rule: "StandardPsdParameters()"
#

PSD_INCLUDES = -I.. \
               -I$(TOP)/psd/include \
               -I$(TOP)/psd/include/private \
               -I$(TOP)/psd/psdsource \
               -I$(TOP)/lx/em/include \
               -I$(TOP)/lx/include \
               -I$(TOP)/host/foundation-libs/CnvEndianLib/host_static \
               -I$(TOP)/host/include \
               -I$(TOP)/mgd/include \
               -I$(TOP)/vre/support

# Locking flag to modify CVs.
# Use -DMCVALL to allow all CVs to be modified.
M_CVS =

PSD_FLAGS    = $(M_CVS) \
               $(EPLUS_CFLAGS)

HOST_FLAGS   = -DHOST_TGT \
               -DMGD_IF

SIM_FLAGS    = -DERMES_DEBUG \
               -DSIM \
               -DSIM_IO

CFLAGS1_HH   = $(ADD_CFLAGS_HH) \
               $(PSD_INCLUDES)

CFLAGS2_HH   = $(PSD_FLAGS) \
               $(HOST_FLAGS) \
               -DLX_ENBLpopup \
               -DPSD_HW

CFLAGS1_TS   = $(ADD_CFLAGS_TS) \
               $(PSD_INCLUDES)

CFLAGS2_TS   = $(PSD_FLAGS) \
               $(SIM_FLAGS) \
               -DMGD_TGT \
               -DMGD \
               -DIPG \
               -DIPGHWTGT

PSD_LDFLAGS      = -L.. \
                   -L$(TOP)/psd/lib \
                   -L$(TOP)/mgd/lib/host

HOST_LINKDIRS    = -L$(TOP)/lx/lib \
                   -L$(TOP)/host/install/lib \
                   -L$(TOP)/host/lib

ENDIAN_LDFLAGS   = -lCnvEndianBase

HOST_EXTERN_LIBS = -lop_keyPortableC \
                   -lgemshid

LDFLAGS1_HH      = $(ADD_LINKFLAGS_HH) \
                   $(PSD_LDFLAGS) \
                   $(HOST_LINKDIRS)

LDFLAGS2_HH      = -lcv_const_hh \
                   $(ADD_LIBS_HH) \
                   $(EPLUS_FEATURES_LIB_HH) \
                   $(DBDT_LIB_HH) \
                   -lpgen_on_host_hh \
                   -L$(TOP)/host/lib     -lBurstMode_static \
                   -lpsdsupport_hhts \
                   -lpulsegen_hh \
                   -lpsdsupport_hhts \
                   -lwavegensim \
                   -lrspsim \
                   -lpsdipgsim_stubs_hh \
                   -lepic_main_hh \
                   -lepic_rt_hh \
                   -lpsdsupport_hh \
                   -lpsdcrucial_hh \
                   -lrfextfile_host \
                   -L$(FFTW_32_HOME)/lib     -lfftw3f \
                   -lpsdutil_hh \
                   $(HOST_EXTERN_LIBS) \
                   $(ENDIAN_LDFLAGS) \
                   -lepic_cm_hh \
                   -lre_support_hh \
                   -L$(TOP)/host/lib     -lCrcClassC \
                   -L$(TOP)/host/lib     -ltime_profiler_client \
                   -L$(TOP)/host/lib     -llog_trace_service_client \
                   -L$(TOP)/host/lib     -luds_com \
                   -L$(TOP)/host/lib     -lhash_table_c \
                   -lm

# --------------------------------------------------------------------
#
#  Rule: "Generate32BitCode()"
#

HW_OPTIONS = \
    $(HW32_OPTIONS)

# --------------------------------------------------------------------

# --------------------------------------------------------------------

# --------------------------------------------------------------------
#
#  Rule: "BuildingEpicPsd()"
#
#

HH_OBJS = $(PSD).host.o-hh $(ADD_CFILES_HOST:.c=.o-hh)

#
#  Rule: "PsdLink()"
#

HH_EXE = $(PSD)

hw $(MAKE_TARGET)::  $(HH_EXE)

# --------------------------------------------------------------------
#
#  Rule: "LinkUsingCxx(LINKOBJ,OBJS,LDFLAGS1,LDFLAGS2)"
#
#
#  LINKOBJ: The name of the resultant object file for this rule.
#       It is created by linking together the files given by
#       OBJS (see next definition).
#
#  OBJS: A list of object files which are to be linked together.
#
#  LDFLAGS1: A list of flags to be passed to $(CXX).  These flags
#       are placed before any standard flags which may be defined.
#
#  LDFLAGS2: A list of flags to be passed to $(CXX).  These flags
#       are placed after any standard flags which may be defined.
#

all $(MAKE_TARGET):: $(HH_EXE)

$(HH_EXE): $(HH_OBJS)
	$(RM) $@
	$(CXX) -o $@ $(LDFLAGS1_HH) $(DEFAULT_LDFLAGS1) $? $(DEFAULT_LDFLAGS2) \
		$(LDFLAGS2_HH) -UIMAKE_LINKUSINGCXX

clean::
	$(RM) $(HH_EXE)

# --------------------------------------------------------------------

# --------------------------------------------------------------------

# ====================================================================

#
#
#
#
#
#

# ====================================================================
#
#  This dependency line is found in all makefiles.  $(MAKE_TARGET)
#     should be defined in the local Imakefile.
#
# ====================================================================

all $(MAKE_TARGET):: $(ALL_OBJS)

# ====================================================================

