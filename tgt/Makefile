# Makefile generated by imake - do not edit!
# $Xorg: imake.c,v 1.6 2001/02/09 02:03:15 xorgcvs Exp $

#
#
#

# ====================================================================
#
#  Included macros and rules from <Imake.cf> and <Imake.rules>
#
# ====================================================================

PWD        = /home/ysfeng/surbeck/temp/sake/tgt
TOP        = /ESE_DV24.0_R01
OS_NAME    = Linux
OS_RELEASE = 2_6_18__194_17_1_el5

SHELL = /bin/sh

BASENAME = /bin/basename
CAT      = /bin/cat
CHMOD    = /bin/chmod
CP       = /bin/cp
CRYPT    = $(TOP)/3p_linux/enigma/bin/enigma
CUT      = /usr/bin/cut
DD       = /bin/dd
GREP     = /bin/grep
MV       = /bin/mv
RM       = /bin/rm -f
SORT     = /bin/sort
TAIL     = /usr/bin/tail
TAR      = /bin/tar
TOUCH    = /bin/touch

# ====================================================================

#
#
#
#
#
#

# ====================================================================
#
#  Common targets found in all makefiles
#
# ====================================================================

all:: hw sim

clean::

hw::

install::

sim::

test::

# ====================================================================

#
#
#
#
#
#

# ====================================================================
#
#  Beginning of included template file: "GCC_AGP.tmpl"
#
# ====================================================================

#
# These are parameter definitions common to all users who use the
# Tornado compiler set, or the PSD teams custom Linux-to-VxWorks
# cross-compiler.  $(WIND_BASE), $(WIND_HOST_TYPE), $(GE_AGP_CCTOP),
# $(ENV_TORNADO_CFLAGS), and $(ENV_TORNADO_LDFLAGS) are defined in
# the user's environment.
#

VPATH = ..

AR     = $(GE_AGP_CCTOP)/bin/powerpc-wrs-vxworks-ar
CC     = $(GE_AGP_CCTOP)/bin/powerpc-wrs-vxworks-gcc
CPP    = $(GE_AGP_CCTOP)/bin/powerpc-wrs-vxworks-cpp
LD     = $(GE_AGP_CCTOP)/bin/powerpc-wrs-vxworks-ld
NM     = $(GE_AGP_CCTOP)/bin/powerpc-wrs-vxworks-nm

STD_COMPILE_FLAGS =     $(ENV_TORNADO_CFLAGS)     $(HARDWARE_OPTIONS)     $(EXCEPTION_COMPILE_FLAGS)     -D_REENTRANT     -I$(WIND_BASE_DIR)/target/h     -I$(WIND_BASE)/target/h     -G 0     -fvolatile     -fsigned-char     -mstrict-align     -mlongcall     -pipe     -Wall     $(WARNING_ERROR_FLAG)     -W

DEFAULT_CFLAGS =     -ansi     -fno-builtin     $(STD_COMPILE_FLAGS)

DEFAULT_CXXFLAGS =     -fno-for-scope     $(STD_COMPILE_FLAGS)

DEFAULT_CPPFLAGS = $(DEFAULT_CXXFLAGS)

DEFAULT_ARFLAGS = -r

DEFAULT_LDFLAGS =     $(ENV_TORNADO_LDFLAGS)     -nostdlib     -r     -x

DEFAULT_EXELDFLAGS =     $(ENV_TORNADO_LDFLAGS)     -nostdlib     -x

DEFAULT_CCLDFLAGS =     $(ENV_TORNADO_LDFLAGS)     -nostdlib     -r     -Wl,-x

DEFAULT_CXXLDFLAGS =     $(DEFAULT_CCLDFLAGS)

DEFAULT_820FLAGS =     -DCPU=PPC604     -mcpu=604     -DPPCCPU=820     -DENABLE_FORCE_STORE_COMPLETION

DEFAULT_3060FLAGS =     -DCPU=PPC860     -mcpu=860     -DPPCCPU=860

DEFAULT_CPV3FLAGS =     -DCPU=PPC603     -mcpu=603     -DPPCCPU=603

# Global compiler flags concering exception handling. By default we turn
# exceptions on:  add -fno_exceptions to get rid of them!

EXCEPTION_COMPILE_FLAGS =

# Global compiler flags concering exception handling. By default we turn
# exceptions off:

EXCEPTION_COMPILE_FLAGS = -fno-exceptions

# Global compiler flag concering warnings.  By default we don't treat
# warnings as errors.  Add -Werror to cause build errors on warnings.

WARNING_ERROR_FLAG =

#
#
# End common Tornado parameter definitions.
#

#
# Macro which enabled exceptions. By default exceptions are disabled.
# This macro has to be called before any other macros in the imake file!
#

#
# Macro which enables warnings to be treated as build errors.
# This macro has to be called before any other macros in the imake file!
#

#
# Macro which enabled exceptions. By default exceptions are disabled.
# This macro has to be called before any other macros in the imake file!
#

# --------------------------------------------------------------------
#
#  Rule: "SuffixRules()"
#

.SUFFIXES:
.SUFFIXES: .c .cpp .cxx .o .o-th

CCFLAGS  = $(CCFLAGS1)  $(DEFAULT_CFLAGS)   $(CCFLAGS2)
CXXFLAGS = $(CPPFLAGS1) $(DEFAULT_CXXFLAGS) $(CPPFLAGS2)

.c.o:
	$(RM) ${@F}
	$(CC) -c -o ${@F} $(CFLAGS1) $< $(DEFAULT_CFLAGS) $(CFLAGS2) \
		-UIMAKE_TORNADO_SUFFIXRULES

.c.o-th:
	$(RM) ${@F}
	$(CC) -c -o ${@F} $< $(DEFAULT_820FLAGS) $(CCFLAGS) \
		-UIMAKE_TORNADO_SUFFIXRULES

.cpp.o:
	$(RM) ${@F}
	$(CXX) -c -o ${@F} $< $(CXXFLAGS1) $(DEFAULT_CXXFLAGS) \
		$(CXXFLAGS2) -UIMAKE_TORNADO_SUFFIXRULES

.cxx.o:
	$(RM) ${@F}
	$(CXX) -c -o ${@F} $< $(CXXFLAGS1) $(DEFAULT_CXXFLAGS) \
		$(CXXFLAGS2) -UIMAKE_TORNADO_SUFFIXRULES

.cpp.o-th:
	$(RM) ${@F}
	$(CXX) -c -o ${@F} $< $(DEFAULT_820FLAGS) $(CXXFLAGS) \
		-UIMAKE_TORNADO_SUFFIXRULES

clean::
	-$(RM) *.o *.o-th

# --------------------------------------------------------------------

# ====================================================================
#
#  End of included template file: "GCC_AGP.tmpl"
#
# ====================================================================

#
#
#
#
#
#

# ====================================================================
#
#  Local Imakefile begins here
#
# ====================================================================

TOOLSET = PSD_TGT_C

TOOLSET = EPIC

MAKE_TARGET = programs

PSD = bbepi

ADD_INLINE_FILES = touch.e

ADD_EFILES =

ADD_CFILES_HOST = getminesp.c

ADD_CFILES_TGT =

ADD_EFLAGS = -z

ADD_E_INCLUDES =

ADD_CFLAGS_HH = -Werror

ADD_CFLAGS_HS = -Werror

ADD_CFLAGS_TH = -Werror

ADD_CFLAGS_TS = -Werror

ADD_LINKFLAGS_HH =

ADD_LINKFLAGS_HS =

ADD_LINKFLAGS_TH =

ADD_LINKFLAGS_TS =

ADD_LIBS_HH =

ADD_LIBS_HS =

ADD_LIBS_TH =

ADD_LIBS_TS =

# --------------------------------------------------------------------
#
#  Rule: "UsePgenOnHost()"
#
#
#  This rule is empty for the TORNADO compiler set.  It is only used
#  by the Epic preprocessor.
#
# --------------------------------------------------------------------

# --------------------------------------------------------------------
#
#  Rule: "PsdParameters()"
#
#

#
#  Rule: "PsdSetup()"
#

VPATH = ..

CCFLAGS1 = $(ADD_CFLAGS_TH) \
           -I.. \
           -I$(TOP)/psd/include \
           -I$(TOP)/psd/include/private \
           -I$(TOP)/psd/psdsource \
           -I$(TOP)/lx/em/include \
           -I$(TOP)/lx/include \
           -I$(TOP)/host/foundation-libs/CnvEndianLib/host_static \
           -I$(TOP)/host/include \
           -I$(TOP)/mgd/include \
           -I$(TOP)/mgd/agp/irf3 \
           -I$(TOP)/vre/support

CCFLAGS2 = $(EPLUS_CCFLAGS) \
           -fno-zero-initialized-in-bss \
           -msdata=none \
           -fstrength-reduce \
           -DMGD \
           -DIPG \
           -DIPGHWTGT \
           -DHW_IO \
           -DMGD_TGT \
           -DPSD_HW \
           -D__ppc

LDFLAGS1 = $(ADD_LINKFLAGS_TH) \
           -L$(TOP)/psd/lib \
           -L$(TOP)/mgd/lib

LDFLAGS2 = $(ADD_LIBS_TH) \
           $(EPLUS_FEATURES_LIB_TH) \
           -lpulsegen_th \
           -lepic_rt_th \
           -lpsdsupport_th \
           -lpsdcrucial_th \
           -lpsdutil_th

# --------------------------------------------------------------------

# --------------------------------------------------------------------
#
#  Rule: "BuildingEpicPsd()"
#
#

TH_OBJS = $(PSD).tgt.o-th $(ADD_CFILES_TGT:.c=.o-th)

#
#  Rule: "PsdLink()"
#

TH_EXE = $(PSD).psd.o

hw $(MAKE_TARGET):: $(TH_EXE)

$(TH_EXE): $(TH_OBJS)
	$(RM) $@
	$(LD) $(LDFLAGS1) $(DEFAULT_LDFLAGS) $? $(LDFLAGS2) -o $@

clean::
	$(RM) $(TH_EXE)

# --------------------------------------------------------------------

# ====================================================================

#
#
#
#
#
#

# ====================================================================
#
#  This dependency line is found in all makefiles.  $(MAKE_TARGET)
#     should be defined in the local Imakefile.
#
# ====================================================================

all $(MAKE_TARGET):: $(ALL_OBJS)

# ====================================================================

